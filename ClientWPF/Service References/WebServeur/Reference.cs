//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.239
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWPF.WebServeur {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageInfo", Namespace="http://schemas.datacontract.org/2004/07/TransfertImageService")]
    [System.SerializableAttribute()]
    public partial class ImageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string imageIDField;
        
        private string AlbumIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string imageID {
            get {
                return this.imageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.imageIDField, value) != true)) {
                    this.imageIDField = value;
                    this.RaisePropertyChanged("imageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string AlbumID {
            get {
                return this.AlbumIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumIDField, value) != true)) {
                    this.AlbumIDField = value;
                    this.RaisePropertyChanged("AlbumID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServeur.IImageTransfert")]
    public interface IImageTransfert {
        
        // CODEGEN : La génération du contrat de message depuis l'opération UploadImage n'est ni RPC, ni encapsulée dans un document.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/UploadImage", ReplyAction="http://tempuri.org/IImageTransfert/UploadImageResponse")]
        ClientWPF.WebServeur.UploadImageResponse UploadImage(ClientWPF.WebServeur.ImageUploadRequest request);
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (ImageDownloadRequest) du message ImageDownloadRequest ne correspond pas à la valeur par défaut (DownloadImage)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/DownloadImage", ReplyAction="http://tempuri.org/IImageTransfert/DownloadImageResponse")]
        ClientWPF.WebServeur.ImageDownloadResponse DownloadImage(ClientWPF.WebServeur.ImageDownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/getAlbumPhotos", ReplyAction="http://tempuri.org/IImageTransfert/getAlbumPhotosResponse")]
        string[] getAlbumPhotos(string albumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/DelectImage", ReplyAction="http://tempuri.org/IImageTransfert/DelectImageResponse")]
        void DelectImage(string imageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/DelectAlbum", ReplyAction="http://tempuri.org/IImageTransfert/DelectAlbumResponse")]
        void DelectAlbum(string albumID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/addUser", ReplyAction="http://tempuri.org/IImageTransfert/addUserResponse")]
        void addUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/createNewAlbum", ReplyAction="http://tempuri.org/IImageTransfert/createNewAlbumResponse")]
        void createNewAlbum(string albumID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/getUserAlbum", ReplyAction="http://tempuri.org/IImageTransfert/getUserAlbumResponse")]
        string[] getUserAlbum(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/disallowUserAlbum", ReplyAction="http://tempuri.org/IImageTransfert/disallowUserAlbumResponse")]
        void disallowUserAlbum(string albumID, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/deleteUser", ReplyAction="http://tempuri.org/IImageTransfert/deleteUserResponse")]
        void deleteUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/showUsers", ReplyAction="http://tempuri.org/IImageTransfert/showUsersResponse")]
        string[] showUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/showAlbums", ReplyAction="http://tempuri.org/IImageTransfert/showAlbumsResponse")]
        string[] showAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfert/checkLogin", ReplyAction="http://tempuri.org/IImageTransfert/checkLoginResponse")]
        bool checkLogin(string userName, string password);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageUploadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageUploadRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public ClientWPF.WebServeur.ImageInfo ImageInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ImageData;
        
        public ImageUploadRequest() {
        }
        
        public ImageUploadRequest(ClientWPF.WebServeur.ImageInfo ImageInfo, System.IO.Stream ImageData) {
            this.ImageInfo = ImageInfo;
            this.ImageData = ImageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadImageResponse {
        
        public UploadImageResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageDownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageDownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ClientWPF.WebServeur.ImageInfo ImageInfo;
        
        public ImageDownloadRequest() {
        }
        
        public ImageDownloadRequest(ClientWPF.WebServeur.ImageInfo ImageInfo) {
            this.ImageInfo = ImageInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImageDownloadResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ImageDownloadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream ImageData;
        
        public ImageDownloadResponse() {
        }
        
        public ImageDownloadResponse(System.IO.Stream ImageData) {
            this.ImageData = ImageData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageTransfertChannel : ClientWPF.WebServeur.IImageTransfert, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageTransfertClient : System.ServiceModel.ClientBase<ClientWPF.WebServeur.IImageTransfert>, ClientWPF.WebServeur.IImageTransfert {
        
        public ImageTransfertClient() {
        }
        
        public ImageTransfertClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageTransfertClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageTransfertClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageTransfertClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientWPF.WebServeur.UploadImageResponse ClientWPF.WebServeur.IImageTransfert.UploadImage(ClientWPF.WebServeur.ImageUploadRequest request) {
            return base.Channel.UploadImage(request);
        }
        
        public void UploadImage(ClientWPF.WebServeur.ImageInfo ImageInfo, System.IO.Stream ImageData) {
            ClientWPF.WebServeur.ImageUploadRequest inValue = new ClientWPF.WebServeur.ImageUploadRequest();
            inValue.ImageInfo = ImageInfo;
            inValue.ImageData = ImageData;
            ClientWPF.WebServeur.UploadImageResponse retVal = ((ClientWPF.WebServeur.IImageTransfert)(this)).UploadImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientWPF.WebServeur.ImageDownloadResponse ClientWPF.WebServeur.IImageTransfert.DownloadImage(ClientWPF.WebServeur.ImageDownloadRequest request) {
            return base.Channel.DownloadImage(request);
        }
        
        public System.IO.Stream DownloadImage(ClientWPF.WebServeur.ImageInfo ImageInfo) {
            ClientWPF.WebServeur.ImageDownloadRequest inValue = new ClientWPF.WebServeur.ImageDownloadRequest();
            inValue.ImageInfo = ImageInfo;
            ClientWPF.WebServeur.ImageDownloadResponse retVal = ((ClientWPF.WebServeur.IImageTransfert)(this)).DownloadImage(inValue);
            return retVal.ImageData;
        }
        
        public string[] getAlbumPhotos(string albumID) {
            return base.Channel.getAlbumPhotos(albumID);
        }
        
        public void DelectImage(string imageID) {
            base.Channel.DelectImage(imageID);
        }
        
        public void DelectAlbum(string albumID) {
            base.Channel.DelectAlbum(albumID);
        }
        
        public void addUser(string userName, string password) {
            base.Channel.addUser(userName, password);
        }
        
        public void createNewAlbum(string albumID, string userName) {
            base.Channel.createNewAlbum(albumID, userName);
        }
        
        public string[] getUserAlbum(string userName) {
            return base.Channel.getUserAlbum(userName);
        }
        
        public void disallowUserAlbum(string albumID, string userName) {
            base.Channel.disallowUserAlbum(albumID, userName);
        }
        
        public void deleteUser(string userName) {
            base.Channel.deleteUser(userName);
        }
        
        public string[] showUsers() {
            return base.Channel.showUsers();
        }
        
        public string[] showAlbums() {
            return base.Channel.showAlbums();
        }
        
        public bool checkLogin(string userName, string password) {
            return base.Channel.checkLogin(userName, password);
        }
    }
}
